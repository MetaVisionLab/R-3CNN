name: "alexnet_R2Net_hinge_train"
layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label_siamese"
  image_data_param {
    source: "../../data/1/train.txt"
    batch_size: 64
    new_height: 256
    new_width: 256
    root_folder: "../../data/faces/"
    shuffle: false
    reference: true
  }
  transform_param {
    crop_size: 227
    mean_file: "../../data/1/256_single_mean.binaryproto"
    mirror: true
    scale: 0.00392156862745
  }
}

layer {
  name: "p_data"
  type: "ImageData"
  top: "p_data"
  top: "label_siamese_p"
  image_data_param {
    source: "../../data/1/train_p.txt"
    batch_size: 64
    new_height: 256
    new_width: 256
    root_folder: "../../data/faces/"
    shuffle: false
    reference: true
  }
  transform_param {
    crop_size: 227
    mean_file: "../../data/1/256_single_p_mean.binaryproto"
    mirror: true
    scale: 0.00392156862745
  }
}

layer {
  name: "singledata"
  type: "ImageData"
  top: "singledata"
  top: "label"
  image_data_param {
    source: "../../data/1/single.txt"
    batch_size: 64
    reference: false
    shuffle: false
  }
}

layer {
  name: "singledata_p"
  type: "ImageData"
  top: "singledata_p"
  top: "label_p"
  image_data_param {
    source: "../../data/1/single_p.txt"
    batch_size: 64
    reference: false
    shuffle: false
  }
}

layer {
  name: "silence"
  type: "Silence"
  bottom: "singledata"
  bottom: "singledata_p"
  bottom: "label_siamese_p"
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "conv1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "norm1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "pool1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "conv2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "norm2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "pool2"
  top: "conv3"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_b"    
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    name: "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    name: "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
# layer {
#   name: "drop6"
#   type: "Dropout"
#   bottom: "fc6"
#   top: "fc6"
#   dropout_param {
#     dropout_ratio: 0.5
#   }
# }
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    name: "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
# layer {
#   name: "drop7"
#   type: "Dropout"
#   bottom: "fc7"
#   top: "fc7"
#   dropout_param {
#     dropout_ratio: 0.5
#   }
# }
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "fc7"
  top: "ip1"
  param {
    name: "ip1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}




#net_p

layer {
  name: "p_conv1"
  type: "Convolution"
  bottom: "p_data"
  top: "p_conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "p_relu1"
  type: "ReLU"
  bottom: "p_conv1"
  top: "p_conv1"
}
layer {
  name: "p_norm1"
  type: "LRN"
  bottom: "p_conv1"
  top: "p_norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "p_pool1"
  type: "Pooling"
  bottom: "p_norm1"
  top: "p_pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "p_conv2"
  type: "Convolution"
  bottom: "p_pool1"
  top: "p_conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "p_relu2"
  type: "ReLU"
  bottom: "p_conv2"
  top: "p_conv2"
}
layer {
  name: "p_norm2"
  type: "LRN"
  bottom: "p_conv2"
  top: "p_norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "p_pool2"
  type: "Pooling"
  bottom: "p_norm2"
  top: "p_pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "p_conv3"
  type: "Convolution"
  bottom: "p_pool2"
  top: "p_conv3"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "p_relu3"
  type: "ReLU"
  bottom: "p_conv3"
  top: "p_conv3"
}
layer {
  name: "p_conv4"
  type: "Convolution"
  bottom: "p_conv3"
  top: "p_conv4"
  param {
    name: "conv4_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv4_b"    
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "p_relu4"
  type: "ReLU"
  bottom: "p_conv4"
  top: "p_conv4"
}
layer {
  name: "p_conv5"
  type: "Convolution"
  bottom: "p_conv4"
  top: "p_conv5"
  param {
    name: "conv5_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv5_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "p_relu5"
  type: "ReLU"
  bottom: "p_conv5"
  top: "p_conv5"
}
layer {
  name: "p_pool5"
  type: "Pooling"
  bottom: "p_conv5"
  top: "p_pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "p_fc6"
  type: "InnerProduct"
  bottom: "p_pool5"
  top: "p_fc6"
  param {
    name: "fc6_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc6_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "p_relu6"
  type: "ReLU"
  bottom: "p_fc6"
  top: "p_fc6"
}
# layer {
#   name: "p_drop6"
#   type: "Dropout"
#   bottom: "p_fc6"
#   top: "p_fc6"
#   dropout_param {
#     dropout_ratio: 0.5
#   }
# }
layer {
  name: "p_fc7"
  type: "InnerProduct"
  bottom: "p_fc6"
  top: "p_fc7"
  param {
    name: "fc7_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "fc7_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0.1
    }
  }
}
layer {
  name: "p_relu7"
  type: "ReLU"
  bottom: "p_fc7"
  top: "p_fc7"
}
# layer {
#   name: "p_drop7"
#   type: "Dropout"
#   bottom: "p_fc7"
#   top: "p_fc7"
#   dropout_param {
#     dropout_ratio: 0.5
#   }
# }
layer {
  name: "p_ip1"
  type: "InnerProduct"
  bottom: "p_fc7"
  top: "p_ip1"
  param {
    name: "ip1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "ip1_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



layer {
  name: "subtract"
  type: "Eltwise"
  bottom: "pool5" 
  bottom: "p_pool5"
  top: "subtract"
  eltwise_param {
    operation: SUBTRACT
  }
}

layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "subtract"
  top: "ip2"
  param {
    name: "ip2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "ip2_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "ip2_relu"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}


layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    name: "ip3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "ip3_b"
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "msra"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}



#loss 
layer {
  name: "hinge_loss"
  type: "HingeLoss"
  bottom: "ip3"
  bottom: "label_siamese"
  top: "hinge_loss"
  hinge_loss_param {
    margin: 3.0
    norm: L1
  }
  loss_weight: 0.1
}

layer {
  name: "eucli_loss1"
  type: "EuclideanLoss"
  bottom: "ip1"
  bottom: "label"
  top: "eucli_loss1"
  #loss_weight: 0.5
}

layer {
  name: "eucli_loss2"
  type: "EuclideanLoss"
  bottom: "p_ip1"
  bottom: "label_p"
  top: "eucli_loss2"
  #loss_weight: 0.5
}
